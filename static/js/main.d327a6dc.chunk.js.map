{"version":3,"sources":["Component/ContactForm/ContactForm.styled.js","Component/ContactForm/ContactForm.jsx","Component/Filter/Filter.jsx","Component/ContactList/ContactList.styled.js","Component/ContactList/ContactList.jsx","App.styled.js","App.js","reportWebVitals.js","index.js"],"names":["Form","styled","form","Label","label","Button","button","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","console","log","props","propSubmit","resetForm","onSubmit","this","htmlFor","placeholder","type","pattern","title","required","onChange","id","Component","Filter","propeTypes","PropTypes","string","func","List","ul","ContactList","contacts","onDelete","map","onClick","contact","array","Div","div","App","filter","formSubmitHandler","data","addContact","changeFilter","getVisibleList","normalisedFilter","toLowerCase","includes","deleteContacts","contactId","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d327a6dc.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  margin: 5px;\r\n`;\r\nexport const Button = styled.button`\r\n  margin-top: 10px;\r\n  color: #7b3f3f;\r\n  height: 25px;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {Form, Label, Button}from './ContactForm.styled'\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    this.props.propSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Label htmlFor={this.nameInputId}>\r\n            Name\r\n            <input\r\n              placeholder=\"name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameInputId}\r\n            />\r\n          </Label>\r\n          <Label htmlFor={this.numberInputId}>\r\n            Number\r\n            <input\r\n              placeholder=\"number\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              id={this.numberInputId}\r\n            />\r\n          </Label>\r\n          <Button type=\"submit\">Add contact</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\nexport default Filter;\r\n\r\nFilter.propeTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n`;\r\nexport const Button = styled.button`\r\n  color: #f71c0c;\r\n  border: 1px solid #723a3a;\r\n  border-radius: 5px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport{List, Button} from './ContactList.styled'\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <List>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <Button onClick={() => onDelete(id)}>delete</Button>\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\nexport default ContactList;\r\n\r\nContactList.propeTypes = {\r\n  contact: PropTypes.array,\r\n  onDelete: PropTypes.func\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const Div = styled.div`\r\n  margin: 0 auto;\r\n  width: 400px;\r\n  height: 500px;\r\n\r\n  text-align: center;\r\n  justify-content: center;\r\n  border-radius: 10px;\r\n  border: 3px solid #ce6a6a;\r\n  background-color: #ec9f9f;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './Component/ContactForm/ContactForm';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Filter from './Component/Filter/Filter';\r\nimport ContactList from './Component/ContactList/ContactList';\r\nimport { Div } from './App.styled';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  formSubmitHandler = data => {\r\n    console.log(data);\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { filter, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      [filter]: value,\r\n    });\r\n  };\r\n\r\n  addContact = data => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: data.name,\r\n      number: data.number,\r\n    };\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [...contacts, contact],\r\n    }));\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  getVisibleList = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalisedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalisedFilter));\r\n  };\r\n\r\n  deleteContacts = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm propSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <p>Find contacts by name</p>\r\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n        <ContactList contacts={this.getVisibleList()} onDelete={this.deleteContacts} />\r\n      </Div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}