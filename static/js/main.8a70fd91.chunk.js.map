{"version":3,"sources":["Component/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","console","log","props","propSubmit","resetForm","onSubmit","this","htmlFor","type","pattern","title","required","onChange","id","Component","App","contacts","filter","formSubmitHandler","data","map","contact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAuEeA,E,4MAnEbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAEVC,YAAcC,c,EACdC,cAAgBD,c,EAEdE,aAAe,SAAAC,GACd,MAAsBA,EAAMC,cAArBP,EAAP,EAAOA,KAAMQ,EAAb,EAAaA,MAEZ,EAAKC,SAAL,eACGT,EAAOQ,K,EAIXE,aAAe,SAAAJ,GACbA,EAAMK,iBACNC,QAAQC,IAAI,EAAKd,OACjB,EAAKe,MAAMC,WAAW,EAAKhB,OAC3B,EAAKiB,a,EAGVA,UAAY,WACV,EAAKP,SAAS,CACZT,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,OACE,gCACA,2CACC,uBAAMgB,SAAUC,KAAKR,aAArB,UACC,wBAAOS,QAASD,KAAKhB,YAArB,iBAEE,uBACEkB,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRf,MAAOU,KAAKnB,MAAMC,KAClBwB,SAAUN,KAAKb,aACfoB,GAAIP,KAAKhB,iBAGb,wBAAOiB,QAASD,KAAKd,cAArB,mBAEE,uBACEgB,KAAK,MACLpB,KAAK,SACLqB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRf,MAAOU,KAAKnB,MAAME,OAClBuB,SAAUN,KAAKb,aACfoB,GAAIP,KAAKd,mBAGX,wBAAQgB,KAAK,SAAb,mC,GA7DSM,aC2CJC,E,4MA1Cb5B,MAAQ,CACN6B,SAAU,CACR,CAAEH,GAAI,OAAQzB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEwB,GAAI,OAAQzB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEwB,GAAI,OAAQzB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEwB,GAAI,OAAQzB,KAAM,iBAAkBC,OAAQ,cAEhD4B,OAAQ,I,EAGVC,kBAAoB,SAAAC,GAClBnB,QAAQC,IAAIkB,I,EAGd1B,aAAe,SAAAC,GACb,MAA0BA,EAAMC,cAAxBsB,EAAR,EAAQA,OAAQrB,EAAhB,EAAgBA,MAEhB,EAAKC,SAAL,eACGoB,EAASrB,K,4CAId,WACE,OACE,qCACE,cAAC,EAAD,CAAMO,WAAYG,KAAKY,oBACvB,0CACA,sDACA,uBAAOL,GAAIP,KAAKlB,KAAhB,SACE,uBAAOoB,KAAK,OAAOZ,MAAOU,KAAKnB,MAAM8B,OAAQL,SAAUN,KAAKb,aAAcL,KAAK,aAEjF,6BACGkB,KAAKnB,MAAM6B,SAASI,KAAI,SAAAC,GAAO,OAC9B,+BACGA,EAAQjC,KADX,KACmBiC,EAAQhC,SADlBgC,EAAQR,gB,GAlCXC,aCSHQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8a70fd91.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  }\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n    handleChange = event => {\r\n     const {name, value} = event.currentTarget\r\n\r\n      this.setState({\r\n        [name]: value,\r\n      })\r\n  }\r\n  \r\n     handleSubmit = event => {\r\n       event.preventDefault();\r\n       console.log(this.state);\r\n       this.props.propSubmit(this.state);\r\n       this.resetForm()\r\n  }\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: ''\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h1>Phonebook</h1>\r\n       <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n          <button type=\"submit\">Add contact</button>\r\n          \r\n        </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n\r\n","import React, { Component } from 'react';\nimport Form from './Component/Form';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    console.log(data);\n  };\n\n  handleChange = event => {\n    const { filter, value } = event.currentTarget;\n\n    this.setState({\n      [filter]: value,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Form propSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <p>Find contacts by name</p>\n        <label id={this.name}>\n          <input type=\"text\" value={this.state.filter} onChange={this.handleChange} name=\"filter\" />\n        </label>\n        <ul>\n          {this.state.contacts.map(contact => (\n            <li key={contact.id}>\n              {contact.name}: {contact.number}\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}